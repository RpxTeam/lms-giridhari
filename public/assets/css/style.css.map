{"version":3,"sources":["_config.sass","components/bourbon/css3/_font-face.scss","components/bourbon/helpers/_font-source-declaration.scss","style.css","components/bourbon/addons/_prefixer.scss","components/bourbon/addons/_border-radius.scss","components/bourbon/helpers/_directional-values.scss","components/bourbon/addons/_position.scss","components/bourbon/addons/_size.scss","components/bourbon/css3/_placeholder.scss","style.scss","components/bourbon/css3/_flex-box.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["@import \"components/bourbon/bourbon\";\n@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900');\n\n@include font-face('SegoeUI', \"../fonts/SegoeUI\");\n\n$segoe: 'Segoe UI', Helvetica, Arial, sans-serif;\n$roboto: 'Roboto', sans-serif;\n\n//  COLORS\n$white: #FFFFFF;\n$black: #3D3D3D;\n$grey: #969696;\n$lightGrey: #EEEEEE;\n$orange: #FF7933;\n$lightOrange: #FF9100;\n$green: #2EC600;\n\n// EXTENDS CLASSES\n%transition {\n\t@include transition(all .4s linear); }\n.circle {\n\t@include border-top-radius(50%);\n\t@include border-bottom-radius(50%); }\n%blockCenter {\n\tmargin-left: auto;\n\tmargin-right: auto; }\n%clearfix {\n\tcontent: '.';\n\tdisplay: block;\n\tclear: both;\n\theight: 0;\n\tline-height: 0;\n\tfont-size: 0;\n\tvisibility: hidden;\n\toverflow: hidden; }\n\n$browser-context: 14; // Default\n\n@function em($pixels, $context: $browser-context) {\n\t@return #{$pixels/$context}em; }\n\n* {\n\tpadding: 0;\n\tmargin: 0;\n\ttext-decoration: none; }\n\nh1 {\n\tfont-size: em(36); }\nh2 {\n\tfont-size: em(30); }\nh3 {\n\tfont-size: em(23); }\nh4 {\n\tfont-size: em(21); }\nh5 {\n\tfont-size: em(18); }\nh6 {\n\tfont-size: em(14); }\n\nhtml, body {\n\theight: 100%;\n\tfont-family: $roboto;\n\tfont-size: 14px; }\n\n.gridD {\n\tmax-width: 100%;\n\t@include padding(null 45px);\n\tposition: relative; }\n\nsmall {\n\tfont-size: em(12); }\n\n.bg-orange-gradient {\n\tbackground: url('../img/bg-loader.png') center center no-repeat #FF7933;\n\tbackground-size: cover; }\n\n.black-text {\n\tcolor: $black; }\n.grey-text {\n\tcolor: $grey; }\n\n[class*=\"icon\"] {\n\tcolor: $orange;\n\t&::before {\n\t\tcolor: inherit; } }\n\n.back-button {\n\t@include position(fixed, 10px null null 13px);\n\ta {\n\t\topacity: .54;\n\t\t@extend %transition;\n\t\ti {\n\t\t\tcolor: $white; }\n\t\t&:hover {\n\t\t\topacity: .7; } } }\n\n.input-field {\n\t@include position(relative, null);\n\t@include padding(6px null); }\n\n.input-field.input-field-icon i,\n.input-field.input-field-icon a {\n\t@include position(absolute, 50% null null 10px);\n\t@include transform(translateY(-50%)); }\n\n.input-field.input-field-icon a {\n\tleft: auto;\n\tright: 23px; }\n\n.input-field.input-field-icon input {\n\tpadding-left: 28px; }\n\n.input {\n\t@include appearance(none);\n\tborder: 1px solid $lightGrey;\n\t-webkit-border-radius: 6px;\n\t-moz-border-radius: 6px;\n\tborder-radius: 6px;\n\t@include size(calc(100% - 28px) 39px);\n\tfont-size: em(14);\n\tfont-weight: 300;\n\tpadding-left: 12px;\n\t@include placeholder {\n\t\tcolor: $grey; } }\n\n.btns-center {\n\ttext-align: center; }\n.btn {\n\t@include appearance(none);\n\tborder: none;\n\tmin-width: 213px;\n\tfont-size: 1em;\n\tline-height: 1em;\n\tborder-radius: 4px;\n\ttext-transform: uppercase;\n\tcolor: $white;\n\tdisplay: block;\n\ttext-align: center;\n\t@include margin(6px null);\n\tcursor: pointer;\n\t@include padding(11px 9px);\n\t@extend %transition;\n\t&.btn-orange {\n\t\tbackground: $lightOrange; }\n\t&.btn-green {\n\t\tbackground: $green; }\n\t&.btn-grey {\n\t\tcolor: $black;\n\t\tbackground: $lightGrey; }\n\t&.btn-center {\n\t\t@include margin(null auto); } }\na.btn {\n\tdisplay: inline-block;\n\tmin-width: calc(213px - 18px); }\n\n.checkbox {\n\t@include size(16); }\n\n.checkbox-container {\n\tdisplay: inline-block;\n\tposition: relative;\n\tpadding-left: 25px;\n\tcursor: pointer;\n\t@include user-select(none);\n\tinput {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t\tcursor: pointer;\n\t\t@include size(0); } }\n\n.checkmark {\n\t@include position(absolute, -1px null null 0);\n\twidth: 14px;\n\theight: 14px;\n\tbackground-color: transparent;\n\tborder: 2px solid $grey;\n\t@extend %transition; }\n\n.checkbox-container:hover input ~ .checkmark {\n\tbackground-color: $lightOrange;\n\tborder-color: $lightOrange; }\n\n.checkbox-container input:checked ~ .checkmark {\n\tbackground-color: $green;\n\tborder-color: $green; }\n\n.checkmark:after {\n\tcontent: \"\";\n\tposition: absolute;\n\tdisplay: none; }\n\n.checkbox-container input:checked ~ .checkmark:after {\n\tdisplay: block; }\n\n.checkbox-container .checkmark:after {\n\t@include position(null, -2px null null 4px);\n\t@include size(6px 13px);\n\tborder: solid white;\n\tborder-width: 0 3px 3px 0;\n\t@include transform(rotate(45deg)); }\n\n.box-shadow {\n\tbox-shadow: 0 3px 6px rgba(0, 0, 0, .16); }\n\n.bd-radius {\n\t-webkit-border-radius: 6px;\n\t-moz-border-radius: 6px;\n\tborder-radius: 6px; }\n","@mixin font-face(\r\n  $font-family,\r\n  $file-path,\r\n  $weight: normal,\r\n  $style: normal,\r\n  $asset-pipeline: $asset-pipeline,\r\n  $file-formats: eot woff2 woff ttf svg) {\r\n\r\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\r\n\r\n  @font-face {\r\n    font-family: $font-family;\r\n    font-style: $style;\r\n    font-weight: $weight;\r\n\r\n    src: font-source-declaration(\r\n      $font-family,\r\n      $file-path,\r\n      $asset-pipeline,\r\n      $file-formats,\r\n      $font-url-prefix\r\n    );\r\n  }\r\n}\r\n","// Used for creating the source string for fonts using @font-face\r\n// Reference: http://goo.gl/Ru1bKP\r\n\r\n@function font-url-prefixer($asset-pipeline) {\r\n  @if $asset-pipeline == true {\r\n    @return font-url;\r\n  } @else {\r\n    @return url;\r\n  }\r\n}\r\n\r\n@function font-source-declaration(\r\n  $font-family,\r\n  $file-path,\r\n  $asset-pipeline,\r\n  $file-formats,\r\n  $font-url) {\r\n\r\n  $src: ();\r\n\r\n  $formats-map: (\r\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\r\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\r\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\r\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\r\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\r\n  );\r\n\r\n  @each $key, $values in $formats-map {\r\n    @if contains($file-formats, $key) {\r\n      $file-path: nth($values, 1);\r\n      $font-format: nth($values, 2);\r\n\r\n      @if $asset-pipeline == true {\r\n        $src: append($src, font-url($file-path) $font-format, comma);\r\n      } @else {\r\n        $src: append($src, url($file-path) $font-format, comma);\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $src;\r\n}\r\n","@import url(\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900\");\n@font-face {\n  font-family: \"SegoeUI\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/SegoeUI.eot?#iefix\") format(\"embedded-opentype\"), url(\"../fonts/SegoeUI.woff2\") format(\"woff2\"), url(\"../fonts/SegoeUI.woff\") format(\"woff\"), url(\"../fonts/SegoeUI.ttf\") format(\"truetype\"), url(\"../fonts/SegoeUI.svg#SegoeUI\") format(\"svg\");\n}\n\n.back-button a, .btn, .checkmark {\n  -webkit-transition: all 0.4s linear;\n  -moz-transition: all 0.4s linear;\n  transition: all 0.4s linear;\n}\n\n.circle {\n  border-top-left-radius: 50%;\n  border-top-right-radius: 50%;\n  border-bottom-left-radius: 50%;\n  border-bottom-right-radius: 50%;\n}\n\n* {\n  padding: 0;\n  margin: 0;\n  text-decoration: none;\n}\n\nh1 {\n  font-size: 2.5714285714em;\n}\n\nh2 {\n  font-size: 2.1428571429em;\n}\n\nh3 {\n  font-size: 1.6428571429em;\n}\n\nh4 {\n  font-size: 1.5em;\n}\n\nh5 {\n  font-size: 1.2857142857em;\n}\n\nh6 {\n  font-size: 1em;\n}\n\nhtml, body {\n  height: 100%;\n  font-family: \"Roboto\", sans-serif;\n  font-size: 14px;\n}\n\n.gridD {\n  max-width: 100%;\n  padding-right: 45px;\n  padding-left: 45px;\n  position: relative;\n}\n\nsmall {\n  font-size: 0.8571428571em;\n}\n\n.bg-orange-gradient {\n  background: url(\"../img/bg-loader.png\") center center no-repeat #FF7933;\n  background-size: cover;\n}\n\n.black-text {\n  color: #3D3D3D;\n}\n\n.grey-text {\n  color: #969696;\n}\n\n[class*=\"icon\"] {\n  color: #FF7933;\n}\n\n[class*=\"icon\"]::before {\n  color: inherit;\n}\n\n.back-button {\n  position: fixed;\n  top: 10px;\n  left: 13px;\n}\n\n.back-button a {\n  opacity: .54;\n}\n\n.back-button a i {\n  color: #FFFFFF;\n}\n\n.back-button a:hover {\n  opacity: .7;\n}\n\n.input-field {\n  position: relative;\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\n\n.input-field.input-field-icon i,\n.input-field.input-field-icon a {\n  position: absolute;\n  top: 50%;\n  left: 10px;\n  -webkit-transform: translateY(-50%);\n  -moz-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  -o-transform: translateY(-50%);\n  transform: translateY(-50%);\n}\n\n.input-field.input-field-icon a {\n  left: auto;\n  right: 23px;\n}\n\n.input-field.input-field-icon input {\n  padding-left: 28px;\n}\n\n.input {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  -ms-appearance: none;\n  -o-appearance: none;\n  appearance: none;\n  border: 1px solid #EEEEEE;\n  -webkit-border-radius: 6px;\n  -moz-border-radius: 6px;\n  border-radius: 6px;\n  height: 39px;\n  width: calc(100% - 28px);\n  font-size: 1em;\n  font-weight: 300;\n  padding-left: 12px;\n}\n\n.input::-webkit-input-placeholder {\n  color: #969696;\n}\n\n.input::-moz-placeholder {\n  color: #969696;\n}\n\n.input:-moz-placeholder {\n  color: #969696;\n}\n\n.input:-ms-input-placeholder {\n  color: #969696;\n}\n\n.btns-center {\n  text-align: center;\n}\n\n.btn {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  -ms-appearance: none;\n  -o-appearance: none;\n  appearance: none;\n  border: none;\n  min-width: 213px;\n  font-size: 1em;\n  line-height: 1em;\n  border-radius: 4px;\n  text-transform: uppercase;\n  color: #FFFFFF;\n  display: block;\n  text-align: center;\n  margin-top: 6px;\n  margin-bottom: 6px;\n  cursor: pointer;\n  padding: 11px 9px;\n}\n\n.btn.btn-orange {\n  background: #FF9100;\n}\n\n.btn.btn-green {\n  background: #2EC600;\n}\n\n.btn.btn-grey {\n  color: #3D3D3D;\n  background: #EEEEEE;\n}\n\n.btn.btn-center {\n  margin-right: auto;\n  margin-left: auto;\n}\n\na.btn {\n  display: inline-block;\n  min-width: calc(213px - 18px);\n}\n\n.checkbox-container {\n  display: inline-block;\n  position: relative;\n  padding-left: 25px;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.checkbox-container input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n\n.checkmark {\n  position: absolute;\n  top: -1px;\n  left: 0;\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n  border: 2px solid #969696;\n}\n\n.checkbox-container:hover input ~ .checkmark {\n  background-color: #FF9100;\n  border-color: #FF9100;\n}\n\n.checkbox-container input:checked ~ .checkmark {\n  background-color: #2EC600;\n  border-color: #2EC600;\n}\n\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n.checkbox-container input:checked ~ .checkmark:after {\n  display: block;\n}\n\n.checkbox-container .checkmark:after {\n  top: -2px;\n  left: 4px;\n  height: 13px;\n  width: 6px;\n  border: solid white;\n  border-width: 0 3px 3px 0;\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  -o-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n\n.box-shadow {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n}\n\n.bd-radius {\n  -webkit-border-radius: 6px;\n  -moz-border-radius: 6px;\n  border-radius: 6px;\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(0.1);\n    opacity: 0;\n  }\n  50% {\n    opacity: .4;\n  }\n  100% {\n    transform: scale(1.6);\n    opacity: 0;\n  }\n}\n\n#loader {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  display: -webkit-box;\n  display: -moz-box;\n  display: box;\n  display: -webkit-flex;\n  display: -moz-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -moz-box-orient: vertical;\n  box-orient: vertical;\n  -webkit-box-direction: normal;\n  -moz-box-direction: normal;\n  box-direction: normal;\n  -webkit-flex-direction: column;\n  -moz-flex-direction: column;\n  flex-direction: column;\n  -ms-flex-direction: column;\n  -webkit-box-align: center;\n  -moz-box-align: center;\n  box-align: center;\n  -webkit-align-items: center;\n  -moz-align-items: center;\n  -ms-align-items: center;\n  -o-align-items: center;\n  align-items: center;\n  -ms-flex-align: center;\n  -webkit-box-pack: center;\n  -moz-box-pack: center;\n  box-pack: center;\n  -webkit-justify-content: center;\n  -moz-justify-content: center;\n  -ms-justify-content: center;\n  -o-justify-content: center;\n  justify-content: center;\n  -ms-flex-pack: center;\n}\n\n#loader .line {\n  border: 3px solid #FFFFFF;\n  border-radius: 50%;\n  position: absolute;\n  margin: auto auto;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 200px;\n  height: 200px;\n}\n\n#loader .line:nth-child(1) {\n  animation: pulse 2.4s infinite;\n}\n\n#loader .line:nth-child(2) {\n  animation: pulse 2.8s infinite;\n}\n\n#loader .line:nth-child(3) {\n  animation: pulse 3.2s infinite;\n}\n\n#loader .line:nth-child(4) {\n  animation: pulse 3.6s infinite;\n}\n\n#loader img {\n  margin-bottom: 10px;\n}\n\n#loader .text {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  text-align: center;\n  margin-bottom: 110px;\n}\n\n#loader p {\n  font-size: 18px;\n  color: #FFFFFF;\n  font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;\n  margin-bottom: 20px;\n  font-weight: 300;\n}\n\n#loader p:last-child {\n  margin-bottom: 0;\n}\n\n#login-page, #register-page {\n  height: 100%;\n}\n\n#login-page .btns, #register-page .btns {\n  margin-top: 31px;\n}\n\n#login-page #logo {\n  padding-top: 60px;\n  margin-bottom: 44px;\n}\n\n#login-page #logo img {\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n#login-page form .remember-me {\n  margin-top: 31px;\n}\n\n#register-page .gridD {\n  padding-right: 19px;\n  padding-left: 19px;\n}\n\n#register-page .back-button {\n  position: absolute;\n  top: 20px;\n  left: auto;\n}\n\n#register-page #logo {\n  padding-top: 39px;\n  text-align: center;\n  margin-bottom: 25px;\n}\n\n#register-page #logo a {\n  font-size: 85px;\n}\n\n#register-page #logo a i {\n  color: #FFFFFF;\n}\n\n#register-page h5 {\n  font-weight: 400;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n#register-page form {\n  background: #FFFFFF;\n  padding: 38px 21px 63px;\n}\n","@charset \"UTF-8\";\r\n\r\n/// A mixin for generating vendor prefixes on non-standardized properties.\r\n///\r\n/// @param {String} $property\r\n///   Property to prefix\r\n///\r\n/// @param {*} $value\r\n///   Value to use\r\n///\r\n/// @param {List} $prefixes\r\n///   Prefixes to define\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include prefixer(border-radius, 10px, webkit ms spec);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     -webkit-border-radius: 10px;\r\n///     -moz-border-radius: 10px;\r\n///     border-radius: 10px;\r\n///   }\r\n///\r\n/// @require {variable} $prefix-for-webkit\r\n/// @require {variable} $prefix-for-mozilla\r\n/// @require {variable} $prefix-for-microsoft\r\n/// @require {variable} $prefix-for-opera\r\n/// @require {variable} $prefix-for-spec\r\n\r\n@mixin prefixer($property, $value, $prefixes) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit {\r\n      @if $prefix-for-webkit {\r\n        -webkit-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == moz {\r\n      @if $prefix-for-mozilla {\r\n        -moz-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == ms {\r\n      @if $prefix-for-microsoft {\r\n        -ms-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == o {\r\n      @if $prefix-for-opera {\r\n        -o-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == spec {\r\n      @if $prefix-for-spec {\r\n        #{$property}: $value;\r\n      }\r\n    } @else  {\r\n      @warn \"Unrecognized prefix: #{$prefix}\";\r\n    }\r\n  }\r\n}\r\n\r\n@mixin disable-prefix-for-all() {\r\n  $prefix-for-webkit:    false !global;\r\n  $prefix-for-mozilla:   false !global;\r\n  $prefix-for-microsoft: false !global;\r\n  $prefix-for-opera:     false !global;\r\n  $prefix-for-spec:      false !global;\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\r\n///\r\n/// @param {Number} $radii\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element-one {\r\n///     @include border-top-radius(5px);\r\n///   }\r\n///\r\n///   .element-two {\r\n///     @include border-left-radius(3px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element-one {\r\n///     border-top-left-radius: 5px;\r\n///     border-top-right-radius: 5px;\r\n///   }\r\n///\r\n///   .element-two {\r\n///     border-bottom-left-radius: 3px;\r\n///     border-top-left-radius: 3px;\r\n///   }\r\n///\r\n/// @output `border-radius`\r\n\r\n@mixin border-top-radius($radii) {\r\n  border-top-left-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-right-radius($radii) {\r\n  border-bottom-right-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-bottom-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-bottom-right-radius: $radii;\r\n}\r\n\r\n@mixin border-left-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-top-left-radius: $radii;\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Directional-property mixins are shorthands for writing properties like the following\r\n///\r\n/// @ignore You can also use `false` instead of `null`.\r\n///\r\n/// @param {List} $vals\r\n///   List of directional values\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dotted null);\r\n///     @include margin(null 0 10px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: dotted;\r\n///     border-top-style: dotted;\r\n///     margin-bottom: 10px;\r\n///     margin-left: 0;\r\n///     margin-right: 0;\r\n///   }\r\n///\r\n/// @require {function} contains-falsy\r\n///\r\n/// @return {List}\r\n\r\n@function collapse-directionals($vals) {\r\n  $output: null;\r\n\r\n  $a: nth($vals, 1);\r\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\r\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\r\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\r\n\r\n  @if $a == 0 { $a: 0; }\r\n  @if $b == 0 { $b: 0; }\r\n  @if $c == 0 { $c: 0; }\r\n  @if $d == 0 { $d: 0; }\r\n\r\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\r\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\r\n  @else if $b == $d                      { $output: $a $b $c;    }\r\n  @else                                  { $output: $a $b $c $d; }\r\n\r\n  @return $output;\r\n}\r\n\r\n/// Output directional properties, for instance `margin`.\r\n///\r\n/// @access private\r\n///\r\n/// @param {String} $pre\r\n///   Prefix to use\r\n/// @param {String} $suf\r\n///   Suffix to use\r\n/// @param {List} $vals\r\n///   List of values\r\n///\r\n/// @require {function} collapse-directionals\r\n/// @require {function} contains-falsy\r\n\r\n@mixin directional-property($pre, $suf, $vals) {\r\n  // Property Names\r\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\r\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\r\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\r\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\r\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\r\n\r\n  $vals: collapse-directionals($vals);\r\n\r\n  @if contains-falsy($vals) {\r\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\r\n\r\n    @if length($vals) == 1 {\r\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\r\n    } @else {\r\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\r\n    }\r\n\r\n    @if length($vals) == 2 {\r\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 3 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 4 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\r\n    }\r\n  } @else {\r\n    #{$all}: $vals;\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Position} $position [relative]\r\n///   A CSS position value\r\n///\r\n/// @param {Arglist} $coordinates [null null null null]\r\n///   List of values that correspond to the 4-value syntax for the edges of a box\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include position(absolute, 0 null null 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     left: 10em;\r\n///     position: absolute;\r\n///     top: 0;\r\n///   }\r\n///\r\n/// @require {function} is-length\r\n/// @require {function} unpack\r\n\r\n@mixin position($position: relative, $coordinates: null null null null) {\r\n  @if type-of($position) == list {\r\n    $coordinates: $position;\r\n    $position: relative;\r\n  }\r\n\r\n  $coordinates: unpack($coordinates);\r\n\r\n  $offsets: (\r\n    top:    nth($coordinates, 1),\r\n    right:  nth($coordinates, 2),\r\n    bottom: nth($coordinates, 3),\r\n    left:   nth($coordinates, 4)\r\n  );\r\n\r\n  position: $position;\r\n\r\n  @each $offset, $value in $offsets {\r\n    @if is-length($value) {\r\n      #{$offset}: $value;\r\n    }\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n/// Sets the `width` and `height` of the element.\r\n///\r\n/// @param {List} $size\r\n///   A list of at most 2 size values.\r\n///\r\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\r\n///\r\n/// @example scss - Usage\r\n///   .first-element {\r\n///     @include size(2em);\r\n///   }\r\n///\r\n///   .second-element {\r\n///     @include size(auto 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .first-element {\r\n///     width: 2em;\r\n///     height: 2em;\r\n///   }\r\n///\r\n///   .second-element {\r\n///     width: auto;\r\n///     height: 10em;\r\n///   }\r\n///\r\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\r\n\r\n@mixin size($value) {\r\n  $width: nth($value, 1);\r\n  $height: $width;\r\n\r\n  @if length($value) > 1 {\r\n    $height: nth($value, 2);\r\n  }\r\n\r\n  @if is-size($height) {\r\n    height: $height;\r\n  } @else {\r\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\r\n  }\r\n\r\n  @if is-size($width) {\r\n    width: $width;\r\n  } @else {\r\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\r\n  }\r\n}\r\n","@mixin placeholder {\r\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\r\n  @each $placeholder in $placeholders {\r\n    &:#{$placeholder}-placeholder {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@import 'config';\r\n\r\n@keyframes pulse {\r\n  0%{\r\n    transform:scale(.1);opacity: 0;\r\n  }\r\n  50%{\r\n    opacity: .4;\r\n  }\r\n  100%{\r\n    transform: scale(1.6); opacity: 0;\r\n  }\r\n}\r\n\r\n#loader {\r\n  @include position(fixed, 0);\r\n  z-index: 1000;\r\n  @include display(flex);\r\n  @include flex-direction(column);\r\n  @include align-items(center);\r\n  @include justify-content(center);\r\n  .line {\r\n    border: 3px solid $white;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    margin: auto auto;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    width: 200px;\r\n    height: 200px;\r\n  }\r\n\r\n  .line:nth-child(1) {\r\n    animation: pulse 2.4s infinite;\r\n  }\r\n  .line:nth-child(2) {\r\n    animation: pulse 2.8s infinite;\r\n  }\r\n  .line:nth-child(3) {\r\n    animation: pulse 3.2s infinite;\r\n  }\r\n  .line:nth-child(4) {\r\n    animation: pulse 3.6s infinite;\r\n  }\r\n\r\n  img {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .text {\r\n    @include position(absolute, null null 0 null);\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 110px;\r\n  }\r\n  p {\r\n    font-size: 18px;\r\n    color: $white;\r\n    font-family: $segoe;\r\n    margin-bottom: 20px;\r\n    font-weight: 300;\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n}\r\n\r\n#login-page, #register-page {\r\n  height: 100%;\r\n  .btns {\r\n    margin-top: 31px;\r\n  }\r\n}\r\n\r\n#login-page {\r\n  #logo {\r\n    padding-top: 60px;\r\n    margin-bottom: 44px;\r\n    img {\r\n      display: block;\r\n      @include margin(null auto);\r\n    }\r\n  }\r\n  form {\r\n    .remember-me {\r\n      margin-top: 31px;\r\n    }\r\n  }\r\n}\r\n\r\n#register-page {\r\n  .gridD {\r\n    @include padding(null 19px);\r\n  }\r\n  .back-button {\r\n    @include position(absolute, 20px null null auto);\r\n  }\r\n  #logo {\r\n    padding-top: 39px;\r\n    text-align: center;\r\n    margin-bottom: 25px;\r\n    a {\r\n      font-size: 85px;\r\n      i {\r\n        color: $white;\r\n      }\r\n    }\r\n  }\r\n  h5 {\r\n    font-weight: 400;\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  form {\r\n    background: $white;\r\n    @include padding(38px 21px 63px)\r\n  }\r\n}","// CSS3 Flexible Box Model and property defaults\r\n\r\n// Custom shorthand notation for flexbox\r\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\r\n  @include display-box;\r\n  @include box-orient($orient);\r\n  @include box-pack($pack);\r\n  @include box-align($align);\r\n}\r\n\r\n@mixin display-box {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -ms-flexbox; // IE 10\r\n  display: box;\r\n}\r\n\r\n@mixin box-orient($orient: inline-axis) {\r\n// horizontal|vertical|inline-axis|block-axis|inherit\r\n  @include prefixer(box-orient, $orient, webkit moz spec);\r\n}\r\n\r\n@mixin box-pack($pack: start) {\r\n// start|end|center|justify\r\n  @include prefixer(box-pack, $pack, webkit moz spec);\r\n  -ms-flex-pack: $pack; // IE 10\r\n}\r\n\r\n@mixin box-align($align: stretch) {\r\n// start|end|center|baseline|stretch\r\n  @include prefixer(box-align, $align, webkit moz spec);\r\n  -ms-flex-align: $align; // IE 10\r\n}\r\n\r\n@mixin box-direction($direction: normal) {\r\n// normal|reverse|inherit\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n  -ms-flex-direction: $direction; // IE 10\r\n}\r\n\r\n@mixin box-lines($lines: single) {\r\n// single|multiple\r\n  @include prefixer(box-lines, $lines, webkit moz spec);\r\n}\r\n\r\n@mixin box-ordinal-group($int: 1) {\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n  -ms-flex-order: $int; // IE 10\r\n}\r\n\r\n@mixin box-flex($value: 0) {\r\n  @include prefixer(box-flex, $value, webkit moz spec);\r\n  -ms-flex: $value; // IE 10\r\n}\r\n\r\n@mixin box-flex-group($int: 1) {\r\n  @include prefixer(box-flex-group, $int, webkit moz spec);\r\n}\r\n\r\n// CSS3 Flexible Box Model and property defaults\r\n// Unified attributes for 2009, 2011, and 2012 flavours.\r\n\r\n// 2009 - display (box | inline-box)\r\n// 2011 - display (flexbox | inline-flexbox)\r\n// 2012 - display (flex | inline-flex)\r\n@mixin display($value) {\r\n// flex | inline-flex\r\n  @if $value == \"flex\" {\r\n    // 2009\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: box;\r\n\r\n    // 2012\r\n    display: -webkit-flex;\r\n    display: -moz-flex;\r\n    display: -ms-flexbox; // 2011 (IE 10)\r\n    display: flex;\r\n  } @else if $value == \"inline-flex\" {\r\n    display: -webkit-inline-box;\r\n    display: -moz-inline-box;\r\n    display: inline-box;\r\n\r\n    display: -webkit-inline-flex;\r\n    display: -moz-inline-flex;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n  } @else {\r\n    display: $value;\r\n  }\r\n}\r\n\r\n// 2009 - box-flex (integer)\r\n// 2011 - flex (decimal | width decimal)\r\n// 2012 - flex (integer integer width)\r\n@mixin flex($value) {\r\n\r\n  // Grab flex-grow for older browsers.\r\n  $flex-grow: nth($value, 1);\r\n\r\n  // 2009\r\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\r\n\r\n  // 2011 (IE 10), 2012\r\n  @include prefixer(flex, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\r\n//      - box-direction (normal | reverse)\r\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\r\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\r\n@mixin flex-direction($value: row) {\r\n\r\n  // Alt values.\r\n  $value-2009: $value;\r\n  $value-2011: $value;\r\n  $direction: normal;\r\n\r\n  @if $value == row {\r\n    $value-2009: horizontal;\r\n  } @else if $value == \"row-reverse\" {\r\n    $value-2009: horizontal;\r\n    $direction: reverse;\r\n  } @else if $value == column {\r\n    $value-2009: vertical;\r\n  } @else if $value == \"column-reverse\" {\r\n    $value-2009: vertical;\r\n    $direction: reverse;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(flex-direction, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-direction: $value;\r\n}\r\n\r\n// 2009 - box-lines (single | multiple)\r\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n@mixin flex-wrap($value: nowrap) {\r\n  // Alt values\r\n  $alt-value: $value;\r\n  @if $value == nowrap {\r\n    $alt-value: single;\r\n  } @else if $value == wrap {\r\n    $alt-value: multiple;\r\n  } @else if $value == \"wrap-reverse\" {\r\n    $alt-value: multiple;\r\n  }\r\n\r\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\r\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - TODO: parse values into flex-direction/flex-wrap\r\n// 2011 - TODO: parse values into flex-direction/flex-wrap\r\n// 2012 - flex-flow (flex-direction || flex-wrap)\r\n@mixin flex-flow($value) {\r\n  @include prefixer(flex-flow, $value, webkit moz spec);\r\n}\r\n\r\n// 2009 - box-ordinal-group (integer)\r\n// 2011 - flex-order (integer)\r\n// 2012 - order (integer)\r\n@mixin order($int: 0) {\r\n  // 2009\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(order, $int, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-order: $int;\r\n}\r\n\r\n// 2012 - flex-grow (number)\r\n@mixin flex-grow($number: 0) {\r\n  @include prefixer(flex-grow, $number, webkit moz spec);\r\n  -ms-flex-positive: $number;\r\n}\r\n\r\n// 2012 - flex-shrink (number)\r\n@mixin flex-shrink($number: 1) {\r\n  @include prefixer(flex-shrink, $number, webkit moz spec);\r\n  -ms-flex-negative: $number;\r\n}\r\n\r\n// 2012 - flex-basis (number)\r\n@mixin flex-basis($width: auto) {\r\n  @include prefixer(flex-basis, $width, webkit moz spec);\r\n  -ms-flex-preferred-size: $width;\r\n}\r\n\r\n// 2009 - box-pack (start | end | center | justify)\r\n// 2011 - flex-pack (start | end | center | justify)\r\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\r\n@mixin justify-content($value: flex-start) {\r\n\r\n  // Alt values.\r\n  $alt-value: $value;\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  } @else if $value == \"space-between\" {\r\n    $alt-value: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $alt-value: distribute;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-pack: $alt-value;\r\n}\r\n\r\n// 2009 - box-align (start | end | center | baseline | stretch)\r\n// 2011 - flex-align (start | end | center | baseline | stretch)\r\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-items($value: stretch) {\r\n\r\n  $alt-value: $value;\r\n\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-align, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(align-items, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-align: $alt-value;\r\n}\r\n\r\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\r\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-self($value: auto) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-self, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-item-align: $value-2011;\r\n}\r\n\r\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\r\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\r\n@mixin align-content($value: stretch) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  } @else if $value == \"space-between\" {\r\n    $value-2011: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $value-2011: distribute;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-content, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-line-pack: $value-2011;\r\n}\r\n"]}